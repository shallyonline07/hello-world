========== Angular ==========

i18n (internationalization)
a11y (accessibility)
diff between build/compile
husky pre-hooks

. What is observable? What was equivalent to observable in AngularJS?
	- Observables are used to make async operation like making Ajax calls to server
	- In Angular1 we used to have Promises.


========== CSS =============

========== HTML ============
It is preferred to use ".svg" files rather than ".png" or ".jpg" because ".svg" files are light weight and does not impact app performance.





Q: How do you integrate Restful API's with Angular and react separately


Q: what is Webpack and what does it do?
	- Angular CLI uses a tool called Webpack. It compiles all scripts (.ts) and stylesheets (.css) and combines them in a bundle and 		minifies that bundle. It generates following bundles:
1. polyfills.js: It includes all the scripts to fill the gap b/w the version of javascript that angular needs and the version of javascript supported by most browsers.

2. main.js: It includes all sourcecode of our application.

3. styles.js: It includes all stylesheets of our application. Notice that stylesheets are stored in a javascript bundle.

4. vendor.js: It includes all third party libraries of our application

5. runtime.js: Whenever, you change any code (ts or style), Angular CLI compiles the code and refreshes all these bundles.

Note: After running the application (ng serve) > right click > view page source > it will show index.html markup. It will show 5 different script tags with 5 respective bundles as mentioned above. However, in source code index.html file these script tags are not there. it is generated dynamically.


Q: What is Hot Module Reloading (HMR)?
A: It is a feature of Webpack. Whenever, one of the source files is modified, webpack automatically refreshes the browser.


Q: What is callback hell?
A: 
"nested call backs.

a(function(r){
      b(r, function(s){
            c(s, function(t){
                  d(t, function(u){
                  })
            })
      })
})

Above is an example of callback hell. Programs written in this way are hard to understand and maintain.  That's where reactive extensions come into picture.


Q: Connecting to backend Restful APIs:
A: In AngularJS, we used to use promises to connect with BE APIs. In Angular, we use Observables from "Reactive Extensions" library to perform Async operations like making Ajax calls to server.


Q: What are the pre-requisites to run an angular application?
	- Node
	- Npm (it comes bundled with Node)
	- Typescript
	- Angular CLI


Q: Structure of Angular Project	?
	- e2e folder: 
		. This folder is created for end to end testing. (Protector, Cypress)

	- node_modules folder: 
		. This folder is generated when we install npm dependencies as mentioned in package.json file. When we create angular application using angular CLI (ng new <app-name>), then CLI automatically installs npm dependencies under the hood.
		. This folder stores all third party libraries that our application may depend upon.
		. This folder is purely for development and is not checked into git.
		. When we compile our application, parts of this third party libraries are kept in a bundle and deployed. So, we are not gonna deploy this node_modules folder to server.

	- src folder: 
		. src folder contains actual source code of our application. It has many sub folders:
		. \app folder has following files:
			- app.component.scss
			- app.component.html
			- app.component.specs.ts
			- app.component.ts
			- app.module.ts
			- app-routing.module.ts

		Note: Every application at-least has one module (app.module.ts) and one component (app.component).

		. \assets folder stores static assets like any image file, icon etc.
		. \environment folder stores configuration settings for different environments. It has following two files:
			- environment.ts (for localhost)
			- environment.prod.ts  (for PRODCUTION server)
			- environment.dev.ts (for Development server)
			- environment.uat.ts (for UAT server)

		Note: src folder contains several files as well as below:	
			- index.html (starting point of application)
			- main.ts (to bootstrap the app module)
			- styles.scss (it is a parent style file. It can be used to include bootstrap in the application)

	Note: Root level files (IMP):
		- .gitignore:
			. Here we list all the files/folders that are not required to be checked-in into git.
		- angular.json: 
			. This file mentions various things related to application for ex: project type, build path, assets path, styles source, 				configuration files like environment files for different environments like develop, UAT, production etc, whether 				sourceMap should be visible in the browser or not. Component prefix, lint configuration
		- jest.config.js: This was created manually.
			. configuration for Jest like coverage threshold
		- readme.md:
			. Helpful information to run the application.
		- tsconfig: 
			. There are three separate tsconfig files for app and spec.
			. it mentions typescript configuration settings like "compiler Options" and "files to be included" etc.
		- tslint.json:
			. We can mentione any linting (code quality) configuration settings like 
				* single or double quotes,
				* semicolon (required or not),
				* component selector settings like kebab case,
				* Indentation, 
				* max line length (like 120 characters)


Q: "What are different sections in app.module.ts (root module of the application)?
	- Imports : It lists all modules
	- Declarations: It lists all components, directives, pipes.
	- Providers: It lists all services (OR we can Provide service as root, then we dont need to mention in providers array)
	- Bootstrap: It list the starting component of the application for ex: appComponent.


== India consolidate all such Q's here and clean up ===
Q: Difference between observable and promise?
. Diff between observable and promises
	1. 
	- promises were used in AngularJS. 
	- Observables are introduced in Angular.
	
	2. 
	- Promise handles a single event when async operation succeeds or fails. 
	- Observable is like a stream and allows to pass 0 or more events where callback is called for each event.

	3. 
	- Promise uses "then" to handle the result or "catch" to handle the error. Ex: policyModel.getUsers().then(function (result) {....})
	- Observables use "subscribe". Ex: this.sharedService.getUsers(id).subscribe();

	4.
	- Promises are eager. As soon as you create a promise (call a service) the code is executed even w/o "then". "then" is optional.
	- Observables are lazy. Means nothing happens until you subscribe to them.

	5. 
	- With Promises, if we have to call a service multiple times then we will have to explicitely write the code to call it multiple times.
	- With Observables, we can use .retry(n) operator to call the service n number of times w/o explicitely writing the code.



== India consolidate all such Q's here and clean up ===
Q: What are observables?
A: 	- At core of Reactive Extensions a type is called "Observables". This represents Asynchronous Data Streams.
	- It is like a stream that allows to pass 0 more multiple events where the callback is called for each event.

== India consolidate all such Q's here and clean up ===
Q: Promise: 
	- It emits only a single value at a time.


Q: Difference between git Fork, got Clone?
A:  	Git Clone:
	- It creates a linked copy of the original git repository.
	- It is synchronized with original git repo.
	- In a project where developers work in a team, we usually do git clone.

	Fork: 
	- It creates a completely independent copy of the git repository. 
	- It not synchronized with original git repo.


Q: What is async pipe, why do we use it?
	- Async pipe is used to subscribe to an observable and returns the latest value emitted by observable. i.e. we don't need to 
	subscribe explicitly.
	- When the component gets destroyed, the async pipe unsubscribes automatically to avoid any memory leaks. i.e. we don't need to
	unsubscribe explicitly.


Q: What is forRoot and forChild?
A: refer comp1.component.html.

-- RESUME ---

Q: What are ARIA attacks?

Q: one way binding and two way binding

Q: difference b/w position:absolute/relative

Q: What is your fav topic in Angular?
	- Data Binding, Sharing data b/w components

Q: Why do we do dependency injection? what is the purpose? Can we do w/o doing DI?

Q: Arrow function

Q: John Papa guidelines

Q: ng-template, ng-container, ng-content

Q: How to implement error handling in angular app?




Q: What is javascript closure?

Common Error Message handling
. How to display error messages from common place in application (eg: different services may return error messages. there should be a common place to handle this and display on UI) 

Q: Have you worked on any CSS framework?
	- Bootstrap


Q: Reactive Forms.
A: - FormGroup
   - FormBuilder
   - FormArray


Q: How to detect if any changes in FormGroup (ex: employeeForm) and any control inside form?
A: we can subscribe to "valueChanges" property. 
  Ex: For detecting any changes in form: 
  this.myForm.valueChanges.subscribe(val => {
    console.log(val.name);
    console.log(val.email);
    console.log(val.phone);    
  });

  Ex: for detecting any changes in a form control:
  this.myForm.get('name').valueChanges.subscribe(val => {
    console.log(val);
  });


Q: Angular LifeCycle hooks

Q: How component communication can be done OR how to share data b/w components?

Q: Diff b/w @ViewChild and @ViewChildren?

Q: How do you clone an object?
	- Lodash library (for 
	- 

Q: Types of decorators in Angular.
		
Q: CLI command to generate a component in Angular4.
A: "ng generate" is used to generate components, routes, services and pipes. Below is the syntax to generate a component in Angular4 with CLI command:
	ng generate component <component_Name>;

Q: What are the files that constitute an angular component.
	- component.ts, component.html, component.spec.ts, component.css/scss
	
Q: Property Binding or one-way binding and how to define it?
A: Binding component property value to the DOM(View). We can define it in two ways:
	- using interpolation {{}}
	- using square brackets []

Q: Difference b/w directive and component
A:	[Refer "autoGrow" directive in "angular2-seed" project]
 	- Directive is used to add behavior to an existing component. Where as a component has an attached behavior.
	- Directive is a plain typescript class that has a "@Directive({ })" decorator
	- Directive is used to attach different behaviors to an existing DOM element.
	- Component can be used to break an application into smaller components
	- Directive is used to create a reusable behavior where component can be used to create a reusable component.


=== INDIA ====
. What is event Propagation or Event Bubbling?
	- When there are nested elements and they have same event. Then Event Propagation happens from child to parent.
	- In below code, when button is clicked then Both the methods are called.
<div (click)="onClickDiv()">
      <button (click)="onClickBtn()"></button>
</div>


=== INDIA ====
. How to stop event propagation?
	- we can use below code and it will not call parent event handler
<div (click)="onClickDiv()">
      <button (click)="onClickBtn(); $event.stopPropagation()"></button>
</div>


Q: What is Separation of concerns and how do you achieve that?
	- When component is getting bigger then it's better to break that into smaller components or utility classes or service classes. 			Basically break a bigger chunk into smaller pieces. It improves readability, maintainability and code quality.					For ex: content component.





. What are different operators available in Observables?
	- map()
	- retry()
	- catch()
	- filter()
	- debounceTime()
	- distinctUntilChanged()
	- flatMap()


. What is retry() operator?
	- It is a very powerful operator in Observables.
	- If the service is failing then it will retry calling the service. We can specify the number of times we want to retry.
	- Syntax: this.sharedService.getUsers(id)
		  .map(result => result.json())
		  .retry(3)			// it tries 3 times
		  .catch(...);

. What is Reactive extensions (RxJS)?
	- RxJS is library available for various platforms like javascript, scala, Java.
	- It provides various classes like 
		. Observable: discussed above
		. Subject: it is used with in component communication
		. Subscription: it is used to assign the response of service to.


. Difference between "ng serve" and "npm start"?
	- "npm start" will run whatever you have defined for the "start" command of the "Scripts" object in your "package.json" file. 
	***** For Example *****
	"scripts": {
 		 "start": "ng serve"
	}

	- if no "start" command is specified in "Scripts" object, then it will run node server.js (which will fail if that file isn't there)
	- Using "npm start" is better. IN order to use "ng serve" you need to install angular cli globally.

Q: Difference between JIT and AOT compilation modes?
	Note: We must understand that an application needs to be build first and then compiled.

	- JIT: Just-in-time: 
		. compiles the application in the browser at run time 
		. When the user hits the URL then he has to wait for the response as the JIT compiler inside the browser first compiles the code
		. vendor.bundle.js (generated by "ng build") has JIT compiler inside it
		
	- AOT: Ahead-of-time: 
		.compiles the application at build time


. Diff between Dev build and Prod build (i.e. ng build --dev	VS 	ng build --prod)
	- Dev build:
		.produces sourcemap
		. by default it follows JIT mode of compilation
	- Prod Build:
		. Does not produce sourcemap
		. generated main.bundle.js has minification code (removing excess whitespaces, comments etc) and uglification code (transforming code to short variables)

. what is sourcemap
	Sourcemap has the original ts, css code in uncompressed format. Developer can easily debug the application

. Can we do dev build and not generate sourcemap? [YES]
	- ng serve --dev -sm false

. Can we do prod build and generate sourcemap? [YES]
	- ng serve --prod -sm true

Q: Difference b/w ng build and ng serve
	- ng build will build the application. i.e. Transpile the typescript code into javascript and will create bundles on the disk generally in "dist" folder
	- ng serve will build the application in memory. It does not create any folder. It also runs the application on server.


. What is the use of using AOT(Ahead-of-Time) while building Angular code?


. How to enable PROD build?


. What is "HttpInterceptorService" and when do we need to use it?
	- Read on Google and also refer below:
	- Refer App.component.ts > "this.httpInterceptor.request().addInterceptor" ..... Keep watching whenever an API is called then this gets called by itself
	- Refer App.component.ts > "this.httpInterceptor.response().addInterceptor".....  Keep watching whenever an API response is received then this gets called by itself 

. Difference between setValue() and patchValue() methods of FormGroup.
	- https://www.concretepage.com/forum/thread?qid=515

. What is DoCheck Interface:  https://angular.io/api/core/DoCheck
	- It has a method  ngDoCheck()
	- gets called to check the changes in the directives
	- ngDoCheck() : this function will get called every single time an event has fired in the app that may cause a change. For ex: when setTimeout() is finished.
	- a directive typically should not use both DoCheck and OnChanges(another interface) to respond to changes on the same input,
	- 
. What is OnChanges INterface: https://angular.io/api/core/OnChanges
	- It has a method  ngOnChanges(changes: SimpleChanges)
	- inside this method.....changes.prop contains the old and the new value
	- ngOnChanges(): This will only and only get called if there has been a reference change in any of the @Inputs bindings. For ex: when we call a directive with inout



Q: Routing in Angular
A: you can create an new app with routing module (>ng new hello-world --routing) . Refer Hello-World app
also, "RouterModule" is used when you want to navigate through different pages of your application at the same time it be a single page application. It makes it happen w/o reloading the entire application. User can mention the routing URL in Routing Module that renders the view based on defined routing rules.
	- You can navigate to another route using 'routerLink' property.
	For ex: <button routerLink="/dashboard" (click)="loadDashboard()"></button>
	
	- You can also navigate to another route in typescript file as well.
	For ex: <button (click)="loadDashboard()"></button> and 
	inside ABC.ts > loadDashboard()... this.router.navigate(["/dashboard"]);  ===OR===  this.router.navigateByUrl('/dashboard');

.  What is constructor in typescript how its different from other programming languages like Java?
	- In typescript, the name of constructor function is constructor() unlike java where its the name of class
	- In typescript, there can be only one constructor function in a class unlike there can be three types (default, parameterized and Super constructor)

. How do you make a parameter optional in a method in Typescript/Angular?
	- we can add a question mark (?) after the param name. 
	For ex:
	drawLine(x : number, y? : number){}  // here x is mandatory and y is optional
	drawLine(x? : number, y? : number){}  // here x, y are optional
	Note: if a parameter is optional then all params on RHS must also be optional
	  
. what are the access modifiers in Angular/Typescript?
	- Public, Private and protected.

. What are the steps to create a component manually?
	1. Create a component.ts file
	2. Register the component in a Module (for ex: AppModule)
	
===== Angular CLI commands =====
. How to create a new angular project
	> ng new hello-world

. How to create a new component
	hello-world > ng generate component dummy
	OR
	hello-world > ng g c dummy

. How to create a service class
	hello-world > ng generate service email
	OR
	hello-world > ng g s email

. How to create a service class
	hello-world > ng g module lazy --flat  (mentioning --flat will create "lazy.module.ts" under /app folder)

================================

. what is dependency injection? give me an example of how you used it in your project?
	- injecting dependencies of a class into its constructor. For ex: we can do this by injecting a service class inside the constructor of a component class

. What is singleton pattern? how do you implement with dependency injection?
	- Singleton pattern is when multiple components are dependent upon a common dependent class and a single instance of that common class is used by multiple components.
	- For example: AppModule as multiple components and all those are dependent upon a common service class. We can register that common service class inside AppModule. But it will have a single instance in memory to be shared across multiple modules

. what is Lazy loading of router module? (Refer Study.xls)
	- improve performance : Load only required modules 
	- to load remaining module: reloading strategy 


Jengo
Boothstrap

Migration to angular2





============= Angular JS ===================================================================
scrollTop
$filter

. Restful API's
. 


==1. Please let me know about yourself
==2. please explain about your responsibilities

------ Mentioned in the Document too --------------
==[*] please explain the life cycle of AngularJS application  
	- bootstrap phase: AngularJS JavaScript library is downloaded to the browser. AngularJS initializes components , your module which ng-app directive points to.
	- compile phase: HTML compilation. Static DOM is replaced with a dynamic DOM. Taversing the static DOM and linking the directives to the appropriate JavaScript functionality. 
	- runtime phase: This exists until the user reloads or navigates away from a web page. scope changes are reflected in the view and vice-versa

==[*]
<div1 button controller1>
	<div2 label controller2>

I want to click button inside div1 and display text on label in div2. how to do that?
Ans: (1) $rootscope (2) service, (3) Events (broadcast)

==[*] What are directives in angular js, what is life cycle events of a directive?
	- Pre-compile
	- link
	- Post-compole

---------------------------------------------------

==. Can you give me the example of directive in angularjs? 
==. What are the different types of custom directive in angularJS? [Element, Attribute, CSS, Comment]
. what directive can be used to include an html file in angularJS? 	[<div ng-include="'myFile.htm'"></div>]
==. Difference Between ng-if and ng-show angular directives? [ng-show: the element remains on DOM]
. How do you initialize the variable in angularJS? [ng-init]
. What is $scope variable?
==[*] Can you access a $scope variable across different modules? [no.. we need $rootscope or services. Service is better]
==[*] can you explain the digest cycle of angularJS
==[*] can you tell me something about watch functions
==[*] can you write watch expression inside directive or only in controller. [both]
==[*] When the same variable is used in controller/directive and watch function is written in both controller and directive and the variable value is changed then which watch function will be called first?
[controller watch will be called first]




===[*] Difference between one way binding and two way binding in angularjs
	- one way: (Model($scope) --> View)  					ex: ng-bind
	- two way: (Model($scope) --> View and View --> Model($scope))  	ex: ng-model


. Difference between $scope in angularjs Controller and scope in angularjs Directive
==[*] can we access controller scope in directive. [Yes]
. Can we use scope object directly in directive 
. what is ng-transclude attribute
. we use ng-app to load the application. Is there any othher way to load the application?
. Can we have multiple applications?
==[*] what is $scope.apply (digest cycle)
. How do you access $scope.apply in plain javascript
==[*] What are events in angular?  Like $broadcast and $emit services in angular.
. How will you a javascript file so that other modules can also use it in your project? or How to include an external javascript file in html? [<script src="myscripts.js"></script>]
==[*] Javascript closures?
16. did you write any test script using jasmine/karma?
==[*]Have you worked in Agile? What is the sprint duration? What role you play in that?

=[*] What is the difference between '@' and '=' in directive scope in AngularJS?
	@ one way binding
	= two way binding
	From the HTML:
		<pane bi-title="title" title="{{title}}">{{text}}</pane>
	From Directive:
		scope: { biTitle: '=', title: '@', bar: '=' },


. where are you right now? How long you are working in AngularJS?

=== Javascript ====
===[*] What is typeof operator? 
	- what is the result of ..... document.write(typeof null);....... [A: Object]
	- what is the result of ..... document.write(typeof undefined);....... [A: undefined]

